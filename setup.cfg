[metadata]
name = pyramid-app-caseinterview
summary = A pyramid app for case interview
author = Datalab
author-email = datalab@vanoord.com
keywords = web wsgi bfg pylons pyramid
license = none
home-page = https://caseinterview.data.vanoord.com/
description-file = README.md

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifier =
    "Programming Language :: Python",
    "Framework :: Pyramid",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",

[options.entry_points]
paste.app_factory =
    main = pyramid_app_caseinterview:main

console_scripts =
    pyramid_app_caseinterview_initialize_db = pyramid_app_caseinterview.scripts.initializedb:main

[options]
packages = find:
zip_safe = False  # https://mypy.readthedocs.io/en/latest/installed_packages.html
include_package_data = True
install_requires =
    alembic
    docopt
    gunicorn
    pyramid
    sqlalchemy==2.*
    transaction
    mako
    pypugjs
    psycopg2-binary
    pyramid_debugtoolbar
    pyramid_mako
    pyramid_tm
    types-setuptools
    waitress
    zope.sqlalchemy

setup_requires = setuptools_scm

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install .[testing]` 

# Add here test requirements (semicolon/line-separated)
testing =
    coverage-badge
    faker
    flake8-bugbear
    flake8-isort
    flake8<5
    mypy
    pyramid_debugtoolbar
    pytest
    pytest-black
    pytest-cov
    pytest-flake8
    pytest-isort
    pytest-logging
    pytest-mypy
    pytest-split
    Sphinx
    WebTest

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
    pyramid_app_caseinterview
# data_files =
#    share/pyramid_app_caseinterview_docs = docs/*

[extras]
# Add here additional requirements for extra features, like:
# PDF =
#    ReportLab>=1.2
#    RXP

[mypy]
ignore_missing_imports = True

[mypy-pyramid_app_caseinterview]
allow_untyped_defs = True

[tool:isort]
known_first_party=pyramid_app*,sqlalchemy_eventsourcing
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --verbose
    -W default
testpaths = tests
filterwarnings =
    error
    ignore::UserWarning
    
[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 150
extend_ignore = E203, W503, W601
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[aliases]
docs = build_sphinx

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel
